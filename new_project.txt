*** New Project ***
1) cd coding_dojo/ruby
2) vagrant up
3) vagrant ssh
** This takes us into Ubuntu/Trusty-64:~$
4) cd /vagrant
5) cd rails **** Or whatever subfolder your project is in
6) rails new ***file_name***
7) cd ***file_name***
8) update 'gemfile'
    -line 7: **add**, '~> 1.3.13'
    -line 16: **add**gem 'hirb'
    -line 17: **insert**gem 'rails-footnotes', '>= 4.0.0', '<5'
    -line 28: **uncomment**gem 'bcrypt', '~> 3.1.7'
9) bundle install
10) rails g rails_footnotes:install

***********************************
*** Build ERD aka CREATE MODELS ***

ERD:1) DON'T FORGET TO SET UP YOUR RELATIONSHIPS
    rails g model *Table* *collumn*:string *table it references*:references <<<<If it has a foreign key (is on the "many" end of a relationship)

For Login & Reg: rails g model User name:string email:string password:digest

THREE WAY: AKA One to Many & Many to Many: 
    rails g model User first_name:string last_name:string password:digest
    rails g model Event title:string description:text user:references
    rails g model Attendee user:references event:references

ERD:2) rake db:migrate


*********
ADDING COLUMN TO EXISTING MODEL:
rails generate migration add_<what to add>_to_<model to add to> 
<what_to_add>:<type> (<-- goes on the same line)

REMOVING COLUMN FROM EXISTING MODEL:
rails generate migration Remove<FieldName>From<TableName> <what_to_add>:<type>


*** Create table relationships ***
Learn Platform Lesson: https://login.codingdojo.com/m/9/4630/31347
*** This is a 3 way example ***

    /app/models/user.rb
    class User < ApplicationRecord
        has_secure_password <~ **If using Bcrypt
        has_many :events
        has_many :attendees**, dependent: :destroy** <~ Only if you want it to be destroyed with its parent
        has_many :events_attending, through: :attendees, source: :event
    end

    /app/models/event.rb
    class Event < ApplicationRecord
        belongs_to :user
        has_many :attendees**, dependent: :destroy** <~ Only if you want it to be destroyed with its parent
        has_many :users, through: :attendees
    end

    /app/models/attendee.rb
    class Event < ApplicationRecord
        belongs_to :user
        belongs_to :event
    end

reload!   **necessary if you are in the rails console

***********************
***** VALIDATIONS *****

class User < ActiveRecord::Base
  has_secure_password
  has_many :secrets
  has_many :likes, dependent: :destroy
  has_many :secrets_liked, through: :likes, source: :secret

  EMAIL_REGEX = /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]+)\z/i
  validates :name, presence: true
  validates :email, presence: true, uniqueness: { case_sensitive: false }, format: { with: EMAIL_REGEX }

  before_save :email_lowercase

  def email_lowercase
    email.downcase!
  end
end


**************************
*** IF YOU WANT TO PUT ***
*** DATA IN YOUR TABLE ***

1:) /vagrant/rails/your_project$ rails c
2:) Hirb.enable
3:) *Table*.new
4:) *Table*.create(*collumn*:"whatever" (*separated by commas*) *user:User.first* if you want to populate a foreign key)

??? Did you remember quotation marks and commas?!?!?!?

*********************
*** CREATE ROUTES ***

In VS Code: Go to /config/routes.ruby
    For RESTful routing ~> **uncomment line 15**
        change :products to :your_featured_category

** For NESTED routing **

  resources :sessions
  resources :users
  resources :events do
    resources :attendees
  end

~~~~~~~~~ OR ~~~~~~~~~~~~
~~ ADD ROUTES MANUALLY ~~

get "products" => "products#index"
get "products/new" => "products#new"
post "products" => "products#create"
get "products/:id" => "products#show"
get "products/:id/edit" => "products#edit"
patch "products/:id" => "products#update"
delete "products/:id" => "products#destroy"

/vagrant/rails/your_project$ rake routes

********************************

*** CREATE CONTROLLERS ***

* IF DEFAULT RESTFUL *
* only generate GET requests, manually add POST/PATCH/PUT/DELETE to the existing controller methods or else it will make HTML files for templates that will never be rendered

rails g controller Users index new edit show

* OR ADD CUSTOM *

/vagrant/rails/your_project$ rails g controller <ControllerName*plural and capitalized*> <method> <method> *space separated

********  FOR LOGIN & REG: *************************************
Update APPLICATION controller with current_user HELPER METHOD

  def current_user
    User.find(session[:user_id]) if session[:user_id]
  end
  helper_method :current_user

******************************
*** ADD CREATE CONTROLLERS ***
*** TO SESSIONS AND USERS ****

USER CONTROLLER
  def create
    @user = User.create(user_params)
    if @user.valid?
      # redirect_to dojo_user_path(dojo_id: @user.dojo_id, id: @user.id)
      redirect_to "/sessions/new"
    else
      flash[:notice] = @user.errors.full_messages
      redirect_to :back
    end
  end

  private
    def user_params
      params.require(:user).permit(:name, :email, :password, :password_confirmation)
    end


SESSION CONTROLLER
  def create
    @user = User.find_by_email(params[:email])
    if @user && @user.authenticate(params[:password])
      session[:user_id] = @user.id
      redirect_to "/users/#{@user.id}"
    else
      flash[:errors] = ["Invalid Combination"]
      redirect_to "/sessions/new"
    end
  end

*** SPIN UP SERVER:  ****
/vagrant/rails/your_project$ rails s -b 0.0.0.0

************************
*** LOGIN & REG FORM ***
** AUTHENTICITY TOKEN **

<form action="/users" style="border:1px solid #ccc" method="POST">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    <label for="name"><b>Name:</b></label>
    <input type="text" placeholder="Enter Name" name="user[name]" required><br>
    <label for="email"><b>Email:</b></label>
    <input type="text" placeholder="Enter Email" name="user[email]" required><br>
    <label for="password"><b>Password</b></label>
    <input type="password" placeholder="Enter Password" name="user[password]" required><br>
    <label for="password-repeat"><b>Repeat Password</b></label>
    <input type="password" placeholder="Repeat Password" name="user[password_confirmation]" required><br>
    <button type="submit">Sign Up</button>
</form>

<h1>Edit your profile</h1>
<form action="/users/" style="border:1px solid #ccc" method="POST">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    <input type="hidden" name="_method" value="patch">
    <label for="f_name"><b>First Name:</b></label>
    <input type="text" value="<%= current_user.f_name %>" name="user[f_name]" required><br>
    <label for="l_name"><b>Last Name:</b></label>
    <input type="text" value="<%= current_user.l_name %>" name="user[l_name]" required><br>
    <label for="email"><b>Email:</b></label>
    <input type="text" value="<%= current_user.email %>" name="user[email]" required><br>
    <label for="city"><b>City:</b></label>
    <input type="text" value="<%= current_user.city %>" name="user[city]" required><br>
    <label for="state"><b>State:</b></label>
    <select name="state" id="state">
        <option value="AZ">AZ</option>
        <option value="CA">CA</option>
        <option value="IL">IL</option>
        <option value="WA">WA</option>
    </select><br>
    <button type="submit">Update Records</button>
</form>



*** LOG OUT BUTTON ***
*** USING  LAYOUTS ***

<body>
<% if flash[:errors] %>
  <% flash[:errors].each do |e| %>
    <%= e %>
  <% end %>
<% end %>
<% if current_user %>
  <form action="/sessions/<%=current_user.id%>" method="post">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    <input type="hidden" name="_method" value="delete">
    <input type="submit" value="Log Out">
  </form>
<% end %> 
<%= yield %>
</body>